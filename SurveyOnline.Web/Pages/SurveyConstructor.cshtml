@page
@model SurveyConstructor
@using SurveyOnline.DAL.Entities.Enums
@{
    Layout = "Shared/_Layout";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.css" rel="stylesheet">
</head>

<div class="container">
    <form method="post" enctype="multipart/form-data">
        <div class="card mb-4">
            <div class="card-header">
                <h2>Create Survey</h2>
            </div>
            <div class="card-body">
                <div class="form-group mb-3">
                    <label asp-for="Survey.Title" class="form-label"></label>
                    <input asp-for="Survey.Title" class="form-control" placeholder="Enter survey title"/>
                    <span asp-validation-for="Survey.Title" class="text-danger"></span>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="Survey.Description" class="form-label"></label>
                    <textarea asp-for="Survey.Description" id="markdown-editor" class="form-control" rows="3" placeholder="Enter description"></textarea>
                    <span asp-validation-for="Survey.Description" class="text-danger"></span>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="Survey.TopicName" class="form-label"></label>
                    <select asp-for="Survey.TopicName" class="form-select" name="Survey.TopicName">
                        @foreach (var topic in Model.Topics)
                        {
                            <option value="@topic.Name">@topic.Name</option>
                        }
                    </select>
                    <span asp-validation-for="Survey.TopicName" class="text-danger"></span>
                </div>
                
                <div class="form-group form-check mb-3">
                    <input asp-for="Survey.IsPublic" class="form-check-input" id="isPublicCheckbox"/>
                    <label asp-for="Survey.IsPublic" class="form-check-label">Is Public</label>
                </div>
                
                <div class="form-group mb-3" id="user-select-container" style="display: block;">
                    <label asp-for="SelectedUsers" class="form-label">Select Users</label>
                    <select asp-for="SelectedUsers" class="form-select user-select" multiple="multiple" id="SelectedUsers" name="SelectedUsers"></select>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="Survey.Image" class="form-label"></label>
                    <input asp-for="Survey.Image" type="file" class="form-control-file" accept=".jpg, .jpeg, .png"/>
                    <span asp-validation-for="Survey.Image" class="text-danger"></span>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="SelectedTags" class="form-label"></label>
                    <select class="form-select tags-select" name="SelectedTags" multiple="multiple">
                        @foreach (var tag in Model.Tags)
                        {
                            <option value="@tag.Id">@tag.Name</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedTags" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header">
                <h3>Questions</h3>
            </div>
            <div class="card-body">
                <div id="questions-container" class="mb-3">
                    @if (Model.Questions.Count > 0)
                    {
                        @for (var i = 0; i < Model.Questions.Count; i++)
                        {
                            <div class="form-group mb-3 question-item card p-3" data-index="@i">
                                <label>Title</label>
                                <input class="form-control" type="text" asp-for="Questions[i].Title" value="@Model.Questions[i].Title"/>

                                <label>Description</label>
                                <input class="form-control" type="text" asp-for="Questions[i].Description" value="@Model.Questions[i].Description"/>

                                <label>Type</label>
                                <select class="form-select" asp-for="Questions[i].Type">
                                    @foreach (var type in Enum.GetNames(typeof(QuestionType)))
                                    {
                                        <option value="@type" selected="@(type == Model.Questions[i].Type.ToString())">@type</option>
                                    }
                                </select>

                                <label>Is Visible</label>
                                <input asp-for="Questions[i].IsVisible" class="form-check-input" type="checkbox" name="Questions[@i].IsVisible"
                                       checked="@(Model.Questions[i].IsVisible ? "checked" : null)"/>
                                <button type="submit" class="btn btn-danger mt-2 remove-question" asp-page-handler="RemoveQuestion" name="questionIndex" value="@i">Remove Question</button>
                            </div>
                        }
                    }
                </div>
                
                <button type="submit" class="btn btn-success" asp-page-handler="SubmitForm">Submit</button>
                <button type="submit" class="btn btn-primary mb-3" asp-page-handler="AddQuestion">Add Question</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.js"></script>
    <script src="js/markdown-editor.js"></script>
    <script>
       $(document).ready(function() {
                   $('.tags-select').select2({
                       tokenSeparators: [',', ' '],
                       placeholder: 'Select tags'
                   });
       
                   $('#isPublicCheckbox').on('change', function() {
                       const userSelectContainer = $('#user-select-container');
                       userSelectContainer.toggle(!this.checked);
                       if (!this.checked) initializeUserSelect();
                   });
       
                   async function initializeUserSelect() {
                       const userSelect = $('#SelectedUsers');
                       userSelect.select2({
                           placeholder: 'Select users',
                           tokenSeparators: [',', ' '],
                           minimumInputLength: 1,
                           ajax: {
                               url: '@Url.Page(nameof(SurveyConstructor))?handler=SearchUsers',
                               type: 'POST',
                               headers: {
                                   'RequestVerificationToken': getToken()
                               },
                               contentType: 'application/json',
                               dataType: 'json',
                               data: function (params) {
                                  const query = params.term;
                                  return  JSON.stringify(query);
                               },
                               processResults: function(data) {
                                   return {
                                       results: data.map(user => ({
                                           id: user.id,
                                           text: `${user.userName} - ${user.email}`
                                       }))
                                   };
                               },
                               cache: true
                           }
                       }).on('change', function() {
                           const selectedIds = $(this).val();
                           $('#SelectedUserIds').val(selectedIds ? selectedIds.join(',') : '');
                       });
                   }
       
                   const getToken = () => $('input[name="__RequestVerificationToken"]').val();
       
                   initializeUserSelect();
               });
    </script>
}
